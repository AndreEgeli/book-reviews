/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ZsIyeJnicJH
 */
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  Card,
} from '@/components/ui/card';
import { formatDistanceToNow } from 'date-fns';
interface PostCardProps {
  post: any;
}

function formatPostDate(postDate: string) {
  const date = new Date(postDate);
  return formatDistanceToNow(date, { addSuffix: true });
}

export function PostCard(props: PostCardProps) {
  const { post } = props;
  return (
    <Card className="w-full max-w-md">
      <div className="grid md:grid-cols-2 gap-6 items-start">
        <div className="hidden md:flex items-start">
          <img
            alt="The Silent Patient"
            className="aspect-cover rounded-lg overflow-hidden w-300"
            height={450}
            src={'/next.svg'}
            width={300}
          />
        </div>
        <div className="grid gap-2">
          <CardHeader className="p-6">
            <CardTitle className="text-2xl">{post.title}</CardTitle>
            <CardDescription className="text-sm">
              {post.shortDescription}
            </CardDescription>
            <p className="text-sm text-gray-500 dark:text-gray-400">
              No Author
            </p>
          </CardHeader>
          <CardContent className="p-6 items-start">
            <div className="flex items-center gap-2">
              {[...Array(5)].map((_, index) => (
                <StarIcon
                  key={index}
                  className={`w-6 h-6 ${
                    index < post.rating ? 'fill-primary' : ''
                  }`}
                />
              ))}
            </div>
            <div className="flex items-center gap-2 text-xs">
              <div className="flex items-center gap-1">
                <BookOpenIcon className="w-4 h-4 fill-muted" />
                {post.tag}
                {'\n                          '}
              </div>
              <div className="flex items-center gap-1">
                <CalendarIcon className="w-4 h-4 fill-muted" />
                {formatPostDate(post.createdAt)}
              </div>
            </div>
          </CardContent>
        </div>
      </div>
    </Card>
  );
}

function StarIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  );
}

function BookOpenIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z" />
      <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z" />
    </svg>
  );
}

function CalendarIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="18" x="3" y="4" rx="2" ry="2" />
      <line x1="16" x2="16" y1="2" y2="6" />
      <line x1="8" x2="8" y1="2" y2="6" />
      <line x1="3" x2="21" y1="10" y2="10" />
    </svg>
  );
}
